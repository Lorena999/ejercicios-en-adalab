{"ast":null,"code":"var _jsxFileName = \"/Users/lorena/Dropbox/Mi Mac (MacBook-Pro-de-lorena.local)/Desktop/GitHub/ejercicios-en-adalab/use-effect/src/components/LocalStorage.js\",\n    _s = $RefreshSig$();\n\n// Fichero src/components/App.js\nimport { useEffect, useState } from \"react\"; // Importamos el servicio del local storage\n\nimport ls from \"../services/LocalStorage\"; // Si consoleas ls verás que es el objeto con las 4 funciones que hemos exportado en el servicio\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(ls);\n\nconst LocalStorage = () => {\n  _s();\n\n  // Estados\n  // Obtenemos el nombre del local storage\n  // Si hay datos en el local storage esta función los devolverá\n  // Si no hay datos en el local storage esta función devolverá el segundo parámetro, es decir, un string vacío\n  const localStorageName = ls.get(\"name\", \"\"); // Usamos localStorageName como parámetro de useState porque queremos que al arrancar la página name tenga lo que había en el local storage\n\n  const [name, setName] = useState(localStorageName); // Hacemos lo mismo con el email pero en una sola línea\n  // Programarlo en una sola línea nos gusta más\n\n  const [email, setEmail] = useState(ls.get(\"email\", \"\")); // useEffect\n  // Usamos useEffect para guardar los datos en el local storage\n  // Cuando React renderice y pinte el HTML en la página ejecutará este useEffect\n\n  useEffect(() => {\n    // Guardamos el nombre y el email en el local storage\n    ls.set(\"name\", name);\n    ls.set(\"email\", email); // Este useEffect solo se ejecutará cuando cambie el nombre o el email\n\n    console.log(\"Ha cambiado el nombre o el email\");\n  }, [name, email]); // Eventos\n\n  const handleName = ev => {\n    setName(ev.target.value);\n  };\n\n  const handleEmail = ev => {\n    setEmail(ev.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Usando el local storage:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Escribe tu nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Maricarmen\",\n        value: name,\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Escribe tu email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"mari.carmen@gmail.com\",\n        value: email,\n        onChange: handleEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tus datos son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu nombre es: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu email es: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LocalStorage, \"Wx+OCG2rkqaYvL9eULn0tKtb5z8=\");\n\n_c = LocalStorage;\nexport default LocalStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalStorage\");","map":{"version":3,"sources":["/Users/lorena/Dropbox/Mi Mac (MacBook-Pro-de-lorena.local)/Desktop/GitHub/ejercicios-en-adalab/use-effect/src/components/LocalStorage.js"],"names":["useEffect","useState","ls","console","log","LocalStorage","localStorageName","get","name","setName","email","setEmail","set","handleName","ev","target","value","handleEmail"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,EAAP,MAAe,0BAAf,C,CAEA;;;AACAC,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AAEA,MAAMG,YAAY,GAAG,MAAM;AAAA;;AACzB;AAEA;AACA;AACA;AACA,QAAMC,gBAAgB,GAAGJ,EAAE,CAACK,GAAH,CAAO,MAAP,EAAe,EAAf,CAAzB,CANyB,CAOzB;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACK,gBAAD,CAAhC,CARyB,CAUzB;AACA;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACC,EAAE,CAACK,GAAH,CAAO,OAAP,EAAgB,EAAhB,CAAD,CAAlC,CAZyB,CAczB;AAEA;AACA;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,EAAE,CAACU,GAAH,CAAO,MAAP,EAAeJ,IAAf;AACAN,IAAAA,EAAE,CAACU,GAAH,CAAO,OAAP,EAAgBF,KAAhB,EAHc,CAKd;;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAPQ,EAON,CAACI,IAAD,EAAOE,KAAP,CAPM,CAAT,CAlByB,CA2BzB;;AAEA,QAAMG,UAAU,GAAIC,EAAD,IAAQ;AACzBL,IAAAA,OAAO,CAACK,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAP;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIH,EAAD,IAAQ;AAC1BH,IAAAA,QAAQ,CAACG,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,WAAW,EAAC,YAJd;AAKE,QAAA,KAAK,EAAER,IALT;AAME,QAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,WAAW,EAAC,uBAJd;AAKE,QAAA,KAAK,EAAEH,KALT;AAME,QAAA,QAAQ,EAAEO;AANZ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE;AAAA,mCAAkBT,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE;AAAA,kCAAiBE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAnED;;GAAML,Y;;KAAAA,Y;AAqEN,eAAeA,YAAf","sourcesContent":["// Fichero src/components/App.js\n\nimport { useEffect, useState } from \"react\";\n// Importamos el servicio del local storage\nimport ls from \"../services/LocalStorage\";\n\n// Si consoleas ls verás que es el objeto con las 4 funciones que hemos exportado en el servicio\nconsole.log(ls);\n\nconst LocalStorage = () => {\n  // Estados\n\n  // Obtenemos el nombre del local storage\n  // Si hay datos en el local storage esta función los devolverá\n  // Si no hay datos en el local storage esta función devolverá el segundo parámetro, es decir, un string vacío\n  const localStorageName = ls.get(\"name\", \"\");\n  // Usamos localStorageName como parámetro de useState porque queremos que al arrancar la página name tenga lo que había en el local storage\n  const [name, setName] = useState(localStorageName);\n\n  // Hacemos lo mismo con el email pero en una sola línea\n  // Programarlo en una sola línea nos gusta más\n  const [email, setEmail] = useState(ls.get(\"email\", \"\"));\n\n  // useEffect\n\n  // Usamos useEffect para guardar los datos en el local storage\n  // Cuando React renderice y pinte el HTML en la página ejecutará este useEffect\n  useEffect(() => {\n    // Guardamos el nombre y el email en el local storage\n    ls.set(\"name\", name);\n    ls.set(\"email\", email);\n\n    // Este useEffect solo se ejecutará cuando cambie el nombre o el email\n    console.log(\"Ha cambiado el nombre o el email\");\n  }, [name, email]);\n\n  // Eventos\n\n  const handleName = (ev) => {\n    setName(ev.target.value);\n  };\n\n  const handleEmail = (ev) => {\n    setEmail(ev.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Usando el local storage:</h1>\n\n      <form>\n        <label htmlFor=\"name\">Escribe tu nombre:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Maricarmen\"\n          value={name}\n          onChange={handleName}\n        />\n        <label htmlFor=\"email\">Escribe tu email:</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"mari.carmen@gmail.com\"\n          value={email}\n          onChange={handleEmail}\n        />\n      </form>\n\n      <h2>Tus datos son:</h2>\n      <p>Tu nombre es: {name}</p>\n      <p>Tu email es: {email}</p>\n    </div>\n  );\n};\n\nexport default LocalStorage;\n"]},"metadata":{},"sourceType":"module"}