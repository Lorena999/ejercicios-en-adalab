{"ast":null,"code":"var _jsxFileName = \"/Users/lorena/Dropbox/Mi Mac (MacBook-Pro-de-lorena.local)/Desktop/GitHub/ejercicios-en-adalab/react-pruebas/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [adalabers, setAdalabers] = useState([\"María\", \"Luisa\", \"Pedro\"]);\n  const users = [{\n    name: \"María\",\n    nickname: \"Fugitiva\",\n    id: \"6754\"\n  }, {\n    name: \"Juana\",\n    nickname: \"Veloz\",\n    id: \"6750\"\n  }, {\n    name: \"Siena\",\n    nickname: \"Miller\",\n    id: \"6759\"\n  }];\n\n  const handleNewAdalaber = ev => {\n    setAdalabers(ev.target.value);\n  };\n\n  const renderAdalabers = () => {\n    return adalabers.map((adalaber, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: adalaber.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const renderUsers = () => {\n    return users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"El nombre del usuario es \", user.name, \" y se apoda \", user.nickname]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Adalabers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderAdalabers()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderUsers()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agrega una Adalaber\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new\",\n        children: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"new\",\n        onChange: handleNewAdalaber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"A\\xF1adir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"gJjDUvRTDPisPKTP26SPV3SUxJY=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lorena/Dropbox/Mi Mac (MacBook-Pro-de-lorena.local)/Desktop/GitHub/ejercicios-en-adalab/react-pruebas/src/components/Map.js"],"names":["React","useState","Map","adalabers","setAdalabers","users","name","nickname","id","handleNewAdalaber","ev","target","value","renderAdalabers","map","adalaber","index","toUpperCase","renderUsers","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAD,CAA1C;AACA,QAAMI,KAAK,GAAG,CACZ;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE,UAA3B;AAAuCC,IAAAA,EAAE,EAAE;AAA3C,GADY,EAEZ;AAAEF,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE,OAA3B;AAAoCC,IAAAA,EAAE,EAAE;AAAxC,GAFY,EAGZ;AAAEF,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE,QAA3B;AAAqCC,IAAAA,EAAE,EAAE;AAAzC,GAHY,CAAd;;AAKA,QAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAChCN,IAAAA,YAAY,CAACM,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAZ;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,WAAOV,SAAS,CAACW,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACxC,0BAAO;AAAA,kBAAiBD,QAAQ,CAACE,WAAT;AAAjB,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACxB,WAAOb,KAAK,CAACS,GAAN,CAAWK,IAAD,IAAU;AACzB,0BACE;AAAA,gDAC4BA,IAAI,CAACb,IADjC,kBACmDa,IAAI,CAACZ,QADxD;AAAA,SAASY,IAAI,CAACX,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANM,CAAP;AAOD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKK,eAAe;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAKK,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,KAAxB;AAA8B,QAAA,QAAQ,EAAET;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxCD;;GAAMP,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Map = () => {\n  const [adalabers, setAdalabers] = useState([\"María\", \"Luisa\", \"Pedro\"]);\n  const users = [\n    { name: \"María\", nickname: \"Fugitiva\", id: \"6754\" },\n    { name: \"Juana\", nickname: \"Veloz\", id: \"6750\" },\n    { name: \"Siena\", nickname: \"Miller\", id: \"6759\" },\n  ];\n  const handleNewAdalaber = (ev) => {\n    setAdalabers(ev.target.value);\n  };\n\n  const renderAdalabers = () => {\n    return adalabers.map((adalaber, index) => {\n      return <li key={index}>{adalaber.toUpperCase()}</li>;\n    });\n  };\n  const renderUsers = () => {\n    return users.map((user) => {\n      return (\n        <li key={user.id}>\n          El nombre del usuario es {user.name} y se apoda {user.nickname}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h1>Lista de Adalabers</h1>\n      <ul>{renderAdalabers()}</ul>\n      <h1>Lista de usuarios</h1>\n      <ul>{renderUsers()}</ul>\n      <h2>Agrega una Adalaber</h2>\n      <form>\n        <label htmlFor=\"new\">Nombre</label>\n        <input type=\"text\" name=\"new\" onChange={handleNewAdalaber} />\n        <button>Añadir</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}